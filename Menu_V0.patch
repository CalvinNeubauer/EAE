Index: app/src/main/res/layout/fragment_breadcrumb.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_breadcrumb.xml	(revision )
+++ app/src/main/res/layout/fragment_breadcrumb.xml	(revision )
@@ -0,0 +1,16 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+                xmlns:tools="http://schemas.android.com/tools"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:paddingBottom="@dimen/activity_vertical_margin"
+                android:paddingLeft="@dimen/activity_horizontal_margin"
+                android:paddingRight="@dimen/activity_horizontal_margin"
+                android:paddingTop="@dimen/activity_vertical_margin"
+                tools:context=".BreadcrumbFragment"
+                tools:showIn="@layout/content_breadcrumb">
+    <TextView
+        android:id="@+id/breadcrumb_folder_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Willkommen zur MovieDB"/>
+</RelativeLayout>
Index: app/src/main/java/de/kl/fh/moviestar/BreadcrumbFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/BreadcrumbFragment.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/BreadcrumbFragment.java	(revision )
@@ -0,0 +1,60 @@
+package de.kl.fh.moviestar;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.app.FragmentTransaction;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+
+public class BreadcrumbFragment extends Fragment
+{
+
+    public static final String FRAGMENT_NAME_TAG = "fragment_name";
+
+    private String fragmentName;
+
+    public static void open(FragmentActivity activity, boolean addToBackStack, String name)
+    {
+        Fragment fragment = new BreadcrumbFragment();
+        FragmentTransaction ft = activity.getSupportFragmentManager().beginTransaction();
+        ft.replace(R.id.main_content, fragment);
+        if (addToBackStack)
+        {
+            ft.addToBackStack(null);
+        }
+        if (name != null)
+        {
+            Bundle bundle = new Bundle();
+            bundle.putString(FRAGMENT_NAME_TAG, name);
+            fragment.setArguments(bundle);
+        }
+        ft.commit();
+    }
+
+    public BreadcrumbFragment()
+    {
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState)
+    {
+        View rootView = inflater.inflate(R.layout.fragment_breadcrumb, container, false);
+        TextView title = (TextView) rootView.findViewById(R.id.breadcrumb_folder_name);
+        if (getArguments() != null)
+        {
+            fragmentName = getArguments().getString(FRAGMENT_NAME_TAG);
+            title.setText(fragmentName);
+        }
+        return rootView;
+    }
+
+    public String getFragmentName()
+    {
+        return fragmentName;
+    }
+}
Index: app/src/main/res/layout/menu_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/menu_drawer.xml	(revision )
+++ app/src/main/res/layout/menu_drawer.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/nav_home"
+        android:checkable="true"
+        android:icon="@drawable/ic_home_black_24dp"
+        android:title="@string/action_home"/>
+    <item
+        android:id="@+id/nav_add_fragment"
+        android:icon="@drawable/ic_create_new_folder_black_24dp"
+        android:title="@string/action_new_crumb"/>
+    <item android:title="@string/section_settings">
+        <menu>
+            <item
+                android:id="@+id/nav_help"
+                android:icon="@drawable/ic_help_black_24dp"
+                android:title="@string/action_help"/>
+        </menu>
+    </item>
+</menu>
Index: app/DB.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/DB.properties	(revision )
+++ app/DB.properties	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: app/src/main/res/values/dimens/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens/dimens.xml	(revision )
+++ app/src/main/res/values/dimens/dimens.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="nav_header_vertical_spacing">16dp</dimen>
+    <dimen name="nav_header_height">160dp</dimen>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
Index: app/src/main/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/values.xml	(revision )
+++ app/src/main/res/values/values.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <bool name="is_rtl">false</bool>
+</resources>
\ No newline at end of file
Index: app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbarItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbarItem.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbarItem.java	(revision )
@@ -0,0 +1,26 @@
+package de.kl.fh.moviestar;
+
+import java.io.Serializable;
+
+
+public class BreadcrumbToolbarItem implements Serializable
+{
+    private static final long serialVersionUID = 1090124668787722373L;
+
+    private String name;
+
+    public BreadcrumbToolbarItem(String name)
+    {
+        this.name = name;
+    }
+
+    public String getName()
+    {
+        return name;
+    }
+
+    public void setName(String name)
+    {
+        this.name = name;
+    }
+}
Index: app/src/main/java/de/kl/fh/moviestar/Utils/GuiUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/Utils/GuiUtils.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/Utils/GuiUtils.java	(revision )
@@ -0,0 +1,22 @@
+package de.kl.fh.moviestar.Utils;
+
+import android.content.Context;
+import android.content.DialogInterface;
+import android.support.v7.app.AlertDialog;
+
+
+public class GuiUtils
+{
+    public static void showDialog(Context context, String title, String description)
+    {
+        new AlertDialog.Builder(context)
+                .setTitle(title)
+                .setMessage(description)
+                .setPositiveButton(android.R.string.ok,
+                        (DialogInterface dialog, int which) ->
+                        {
+                            dialog.dismiss();
+                        }
+                ).show();
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/menu_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/menu_main.xml	(revision )
+++ app/src/main/res/layout/menu_main.xml	(revision )
@@ -0,0 +1,11 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+      xmlns:tools="http://schemas.android.com/tools"
+      tools:context="de.kl.fh.moviestar.BreadcrumbActivity">
+
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:title="@string/action_settings"
+        />
+        <!--app:showAsAction="never" -->
+</menu>
Index: app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbar.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/BreadcrumbToolbar.java	(revision )
@@ -0,0 +1,289 @@
+package de.kl.fh.moviestar;
+
+import android.animation.Animator;
+import android.animation.Animator.AnimatorListener;
+import android.animation.ObjectAnimator;
+import android.content.Context;
+import android.os.Bundle;
+import android.os.Parcelable;
+import android.support.annotation.NonNull;
+import android.support.v7.graphics.drawable.DrawerArrowDrawable;
+import android.util.AttributeSet;
+import android.util.SparseArray;
+import android.view.LayoutInflater;
+import android.view.View;
+
+import java.util.ArrayList;
+import java.util.Stack;
+
+
+public class BreadcrumbToolbar extends android.support.v7.widget.Toolbar implements BreadcrumbScrollView.BreadcrumbItemCallback {
+
+    private static final String TAG = BreadcrumbToolbar.class.getSimpleName();
+
+    // Gui
+    private BreadcrumbScrollView breadcrumbScrollView;
+
+    // Listeners
+    private BreadcrumbToolbarListener breadcrumbToolbarListener;
+
+    // Data
+    private Stack<BreadcrumbToolbarItem> toolbarItemStack = new Stack<>();
+    private String toolbarTitle;
+
+    // Meta
+    public static final String SAVE_INSTANCE_STATE_TAG = "save_instance_state_tag";
+    public static final String SAVE_TOOLBAR_STACK_TAG = "save_toolbar_stack_tag";
+    public static final String PROGRESS_ANIM_TAG = "progress";
+    public static final int ICON_ANIM_DURATION = 300;
+
+    public interface BreadcrumbToolbarListener
+    {
+        void onBreadcrumbToolbarItemPop(int stackSize);
+
+        void onBreadcrumbToolbarEmpty();
+
+        String getFragmentName();
+    }
+
+    public BreadcrumbToolbar(Context context)
+    {
+        super(context);
+        init();
+    }
+
+    public BreadcrumbToolbar(Context context, AttributeSet attrs)
+    {
+        super(context, attrs);
+        init();
+    }
+
+    public BreadcrumbToolbar(Context context, AttributeSet attrs, int defStyleAttr)
+    {
+        super(context, attrs, defStyleAttr);
+        init();
+    }
+
+    private void init() {
+        setSaveEnabled(true);
+    }
+
+    public void initToolbar(BreadcrumbToolbarItem object)
+    {
+        LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        breadcrumbScrollView = (BreadcrumbScrollView) inflater.inflate(R.layout.breadcrumb_scroll_view, null);
+        breadcrumbScrollView.setBreadcrumbItemCallback(this);
+        addView(breadcrumbScrollView);
+
+        // Breadcrumb scroll view is now initialized and needs its first root element
+        addItem(object);
+
+        // Animate toolbar toggle icon if exists, set navigation back icon otherwise.
+        if (getNavigationIcon() instanceof DrawerArrowDrawable)
+        {
+            animateNavigationIcon(((DrawerArrowDrawable) getNavigationIcon()), true);
+        } else {
+            initNavigationListener(true);
+        }
+
+        // Primary title needs to be saved
+        if (getTitle() != null) {
+            toolbarTitle = getTitle().toString();
+        }
+
+        // Clear toolbar title on breadcrumb before adding breadcrumbs
+        setTitle("");
+
+    }
+
+    private void initNavigationListener(boolean withIcon)
+    {
+        if (withIcon) {
+            setNavigationIcon(R.drawable.ic_arrow_back_white_24dp);
+        }
+        setNavigationOnClickListener(new OnClickListener()
+        {
+            @Override
+            public void onClick(View v)
+            {
+                if (breadcrumbToolbarListener != null)
+                {
+                    breadcrumbToolbarListener.onBreadcrumbToolbarItemPop(toolbarItemStack.size());
+                }
+            }
+        });
+    }
+
+    private void animateNavigationIcon(DrawerArrowDrawable arrowDrawable, final boolean showArrow)
+    {
+        if (showArrow) {
+            // Set a back click listener on toolbar icon when showing an arrow
+            initNavigationListener(false);
+        }
+        ObjectAnimator animator = ObjectAnimator.ofFloat(arrowDrawable, PROGRESS_ANIM_TAG, showArrow ? 1 : 0).setDuration(ICON_ANIM_DURATION);
+        animator.start();
+        animator.addListener(new AnimatorListener()
+        {
+            @Override
+            public void onAnimationStart(Animator animator)
+            {
+            }
+
+            @Override
+            public void onAnimationEnd(Animator animator)
+            {
+                // Animating end from navigation icon to hamburger icon
+                if (breadcrumbToolbarListener != null && !showArrow)
+                {
+                    breadcrumbToolbarListener.onBreadcrumbToolbarEmpty();
+                }
+            }
+
+            @Override
+            public void onAnimationCancel(Animator animator)
+            {
+            }
+
+            @Override
+            public void onAnimationRepeat(Animator animator)
+            {
+            }
+        });
+    }
+
+    public void addItem(@NonNull BreadcrumbToolbarItem object)
+    {
+        if (breadcrumbScrollView != null)
+        {
+            toolbarItemStack.add(object);
+            breadcrumbScrollView.addItem(object.getName(), toolbarItemStack.size());
+        } else {
+            initToolbar(object);
+        }
+    }
+
+    public void removeItem()
+    {
+        toolbarItemStack.pop();
+        if (breadcrumbScrollView != null && breadcrumbToolbarListener != null)
+        {
+            if (toolbarItemStack.size() > 0)
+            {
+                breadcrumbScrollView.popBreadcrumbItem(toolbarItemStack.size());
+            } else {
+                cleanToolbar();
+            }
+        }
+    }
+
+    public void cleanToolbar()
+    {
+        if (breadcrumbScrollView != null)
+        {
+            toolbarItemStack.removeAllElements();
+
+            if (getNavigationIcon() instanceof DrawerArrowDrawable)
+            {
+                // Animate navigation icon
+                animateNavigationIcon(((DrawerArrowDrawable) getNavigationIcon()), false);
+            } else {
+                // Navigation icon must be removed if none existed
+                setNavigationIcon(null);
+            }
+
+            // Remove scroll view
+            removeView(breadcrumbScrollView);
+            breadcrumbScrollView = null;
+
+            // Reset the toolbar title
+            setTitle(toolbarTitle);
+        }
+    }
+
+    @Override
+    public void onItemClick(int position)
+    {
+        if (breadcrumbScrollView != null && breadcrumbToolbarListener != null)
+        {
+            for (int i = toolbarItemStack.size(); i > position; i--)
+            {
+                // We must call pop on views after removing the top item from stack
+                breadcrumbToolbarListener.onBreadcrumbToolbarItemPop(i - 1);
+            }
+        }
+    }
+
+    public void onBreadcrumbAction(int toolbarStackSize)
+    {
+        if (breadcrumbToolbarListener != null)
+        {
+            if (toolbarStackSize > toolbarItemStack.size())
+            {
+                String itemName = breadcrumbToolbarListener.getFragmentName();
+                addItem(new BreadcrumbToolbarItem(itemName));
+            } else {
+                removeItem();
+            }
+        }
+    }
+
+    public void setBreadcrumbToolbarListener(BreadcrumbToolbarListener listener)
+    {
+        this.breadcrumbToolbarListener = listener;
+    }
+
+    private void setRestoredStack(Stack<BreadcrumbToolbarItem> stack)
+    {
+        for (BreadcrumbToolbarItem item : stack)
+        {
+            addItem(item);
+        }
+    }
+
+    @Override
+    public Parcelable onSaveInstanceState()
+    {
+        Bundle bundle = new Bundle();
+        bundle.putParcelable(SAVE_INSTANCE_STATE_TAG, super.onSaveInstanceState());
+        bundle.putSerializable(SAVE_TOOLBAR_STACK_TAG, toolbarItemStack);
+        return bundle;
+    }
+
+    @Override
+    public void onRestoreInstanceState(Parcelable state)
+    {
+        if (state instanceof Bundle)
+        {
+            Bundle bundle = (Bundle) state;
+            Object o = bundle.getSerializable(SAVE_TOOLBAR_STACK_TAG);
+
+            // Stack gets de-serialized as an ArrayList - known bug !!!
+            // Stack does not implement Serializable but rather just extends the Serializable Vector
+            // which is equivalent to ArrayList
+            Stack itemStack = new Stack();
+            if (o instanceof Stack)
+            {
+                itemStack = (Stack) o;
+            } else if (o instanceof ArrayList)
+            {
+                itemStack.addAll((ArrayList) o);
+            }
+            // Restore toolbar items
+            setRestoredStack(itemStack);
+            state = bundle.getParcelable(SAVE_INSTANCE_STATE_TAG);
+        }
+        super.onRestoreInstanceState(state);
+    }
+
+    @Override
+    protected void dispatchSaveInstanceState(SparseArray<Parcelable> container)
+    {
+        super.dispatchFreezeSelfOnly(container);
+    }
+
+    @Override
+    protected void dispatchRestoreInstanceState(SparseArray<Parcelable> container)
+    {
+        super.dispatchThawSelfOnly(container);
+    }
+}
Index: app/src/main/java/de/kl/fh/moviestar/BreadcrumbScrollView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/BreadcrumbScrollView.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/BreadcrumbScrollView.java	(revision )
@@ -0,0 +1,115 @@
+package de.kl.fh.moviestar;
+
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.HorizontalScrollView;
+import android.widget.LinearLayout;
+
+
+public class BreadcrumbScrollView extends HorizontalScrollView
+{
+
+    private static final String TAG = BreadcrumbScrollView.class.getSimpleName();
+
+
+    private LayoutInflater inflater;
+
+    private BreadcrumbItemCallback breadcrumbItemCallback;
+
+    public interface BreadcrumbItemCallback {
+        void onItemClick(int position);
+    }
+
+    public BreadcrumbScrollView(Context context) {
+        super(context);
+        init();
+    }
+
+    public BreadcrumbScrollView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public BreadcrumbScrollView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init();
+    }
+
+    public void init() {
+        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        // Disable scroll bars
+        setVerticalScrollBarEnabled(false);
+        setHorizontalScrollBarEnabled(false);
+    }
+
+    public void addItem(String name, int stackSize) {
+        LinearLayout linearLayout = (LinearLayout) findViewById(R.id.breadcrumb_scroll_view_inner_layout);
+        LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT);
+        linearLayout.addView(getBreadcrumbItemView(name, stackSize), lp);
+    }
+
+
+    public LinearLayout getBreadcrumbItemView(String name, int stackSize) {
+        LinearLayout linearLayout = (LinearLayout) inflater.inflate(R.layout.breadcrumb_toolbar_item, null);
+        if (stackSize <= 1) {
+            linearLayout.findViewById(R.id.breadcrumb_item_icon).setVisibility(View.GONE);
+        }
+
+        Button button = (Button) linearLayout.findViewById(R.id.breadcrumb_item_button);
+        button.setText(name);
+        button.setTransformationMethod(null);
+        button.setOnClickListener(onClickItemListener);
+
+        // Assign a sequential number to the item button
+        button.setTag(stackSize);
+
+        return linearLayout;
+    }
+
+    public void removeBreadcrumbItemFrom(int position) {
+        LinearLayout linearLayout = (LinearLayout) findViewById(R.id.breadcrumb_scroll_view_inner_layout);
+
+        Log.d(TAG, "[toolbar] removeBreadcrumbItemFrom getChildCount():" + linearLayout.getChildCount() + " position:" + position);
+        for (int i = linearLayout.getChildCount(); i > position; i--) {
+            Log.d(TAG, "[toolbar] remove i:" + i + " ->" + (i - 1));
+            if (linearLayout.getChildAt(i - 1) != null) {
+                linearLayout.removeViewAt(i - 1);
+            }
+        }
+    }
+
+    public void popBreadcrumbItem(int position) {
+        LinearLayout linearLayout = (LinearLayout) findViewById(R.id.breadcrumb_scroll_view_inner_layout);
+        if (linearLayout.getChildAt(position) != null) {
+            linearLayout.removeViewAt(position);
+        }
+    }
+
+    OnClickListener onClickItemListener = new OnClickListener() {
+        @Override
+        public void onClick(View v) {
+            if (breadcrumbItemCallback != null) {
+                int position = (Integer) v.getTag();
+                breadcrumbItemCallback.onItemClick(position);
+            }
+        }
+    };
+
+    public void setBreadcrumbItemCallback(BreadcrumbItemCallback callback) {
+        this.breadcrumbItemCallback = callback;
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int l, int t, int r, int b) {
+        super.onLayout(changed, l, t, r, b);
+        // Always focus on the right most element when a new element is added
+        fullScroll(getResources().getBoolean(R.bool.is_rtl) ? HorizontalScrollView.FOCUS_LEFT : HorizontalScrollView.FOCUS_RIGHT);
+    }
+
+}
+
Index: app/src/main/java/de/kl/fh/moviestar/BreadcrumbActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/de/kl/fh/moviestar/BreadcrumbActivity.java	(revision )
+++ app/src/main/java/de/kl/fh/moviestar/BreadcrumbActivity.java	(revision )
@@ -0,0 +1,202 @@
+package de.kl.fh.moviestar;
+
+
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.NavigationView;
+import android.support.design.widget.Snackbar;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.graphics.drawable.DrawerArrowDrawable;
+import android.view.MenuItem;
+import android.view.View;
+
+import de.kl.fh.moviestar.Utils.GuiUtils;
+
+
+public class BreadcrumbActivity extends AppCompatActivity
+        implements BreadcrumbToolbar.BreadcrumbToolbarListener, FragmentManager.OnBackStackChangedListener, NavigationView.OnNavigationItemSelectedListener
+{
+
+    // Gui
+    private BreadcrumbToolbar toolbar;
+    private DrawerLayout drawer;
+    private ActionBarDrawerToggle toggle;
+    private FloatingActionButton fab;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState)
+    {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_home_screen);
+
+        if (savedInstanceState == null) {
+            BreadcrumbFragment.open(this, false, null);
+        }
+
+        bindViews();
+    }
+
+    private void bindViews()
+    {
+        // Bind toolbar
+        toolbar = (BreadcrumbToolbar) findViewById(R.id.toolbar);
+        // We can't use setSupportActionBar()
+        toolbar.setBreadcrumbToolbarListener(this);
+        toolbar.setTitle(R.string.app_name);
+        // Set animated drawer icon to toolbar
+        DrawerArrowDrawable drawerArrow = new DrawerArrowDrawable(this);
+        drawerArrow.setColor(ContextCompat.getColor(this, android.R.color.white));
+        toolbar.setNavigationIcon(drawerArrow);
+        getSupportFragmentManager().addOnBackStackChangedListener(this);
+
+        // Bind drawer and toggle button
+        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        bindDrawerToggle();
+        NavigationView navigationView = (NavigationView) findViewById(R.id.navigation_view);
+        navigationView.setNavigationItemSelectedListener(this);
+        navigationView.setCheckedItem(R.id.nav_home);
+
+        // Bind FAB
+        fab = (FloatingActionButton) findViewById(R.id.fab);
+        fab.setOnClickListener(this::openBreadCrumbFragment);
+    }
+
+    private void bindDrawerToggle()
+    {
+        if (drawer != null && toolbar != null)
+        {
+            toggle = new ActionBarDrawerToggle(
+                    this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+            drawer.addDrawerListener(toggle);
+            toggle.syncState();
+        }
+    }
+
+    private void openBreadCrumbFragment(View view)
+    {
+        String fragmentName = getString(R.string.breadcrumb_name, getSupportFragmentManager().getBackStackEntryCount() + 1);
+        // Open a new fragment
+        BreadcrumbFragment.open(this, true, fragmentName);
+        // Show snackbar
+        Snackbar.make(view, R.string.new_crumb_created, Snackbar.LENGTH_LONG)
+                .setAction(R.string.undo, (View v) ->
+                {
+                    // Handle undo
+                    getSupportFragmentManager().popBackStackImmediate();
+                }).show();
+    }
+
+    private void clearFragmentBackStack()
+    {
+        FragmentManager fm = getSupportFragmentManager();
+        int count = fm.getBackStackEntryCount();
+        for (int i = 0; i < count; ++i)
+        {
+            fm.popBackStack();
+        }
+    }
+
+    // Lifecycle
+    @Override
+    protected void onResume()
+    {
+        super.onResume();
+    }
+
+    /*
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu)
+    {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.menu_main, menu);
+        return true;
+    }
+    */
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item)
+    {
+        int id = item.getItemId();
+        if (id == R.id.action_settings)
+        {
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    public void onBackStackChanged()
+    {
+        int stackSize = getSupportFragmentManager().getBackStackEntryCount();
+        if (stackSize >= 0)
+        {
+            // Drawer shouldn't affect the toggle icon if breadcrumbs are displayed
+            if (drawer != null && toggle != null)
+            {
+                drawer.removeDrawerListener(toggle);
+            }
+        }
+        if (toolbar != null)
+        {
+            // Handle breadcrumb items add/remove anywhere, as long as you track their size
+            toolbar.onBreadcrumbAction(getSupportFragmentManager().getBackStackEntryCount());
+        }
+    }
+
+    // Toolbar callbacks
+    @Override
+    public void onBreadcrumbToolbarItemPop(int stackSize)
+    {
+        // We need remove fragments on every "item pop" callback
+        getSupportFragmentManager().popBackStack();
+    }
+
+    @Override
+    public void onBreadcrumbToolbarEmpty()
+    {
+        // Leave this empty if you aren't using a drawer implementation
+        bindDrawerToggle();
+    }
+
+    @Override
+    public String getFragmentName()
+    {
+        Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.main_content);
+        if (fragment instanceof BreadcrumbFragment)
+        {
+            return ((BreadcrumbFragment) fragment).getFragmentName();
+        }
+        return null;
+    }
+
+    // Drawer callbacks
+    @Override
+    public boolean onNavigationItemSelected(MenuItem item)
+    {
+        int id = item.getItemId();
+        if (id == R.id.nav_home)
+        {
+            clearFragmentBackStack();
+        } else if (id == R.id.nav_add_fragment)
+        {
+            if (fab != null) {
+                openBreadCrumbFragment(fab);
+            }
+        } else if (id == R.id.nav_help)
+        {
+            GuiUtils.showDialog(this, getString(R.string.action_help), getString(R.string.help_content));
+        }
+        if (drawer != null)
+        {
+            drawer.closeDrawer(GravityCompat.START);
+        }
+        return true;
+    }
+}
+
Index: app/src/main/res/layout/content_breadcrumb.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_breadcrumb.xml	(revision )
+++ app/src/main/res/layout/content_breadcrumb.xml	(revision )
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- We set clickable="true" to the drawer root layout, which fixes the drawer stuck issue -->
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:clickable="true"
+    android:fitsSystemWindows="true"
+    tools:context="de.kl.fh.moviestar.BreadcrumbActivity">
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <com.rokpetek.breadcrumbtoolbar.BreadcrumbToolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay"
+            />
+
+    </android.support.design.widget.AppBarLayout>
+    <FrameLayout
+        android:id="@+id/main_content"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="?attr/actionBarSize"/>
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="16dp"
+        android:src="@drawable/ic_arrow_back_white_24dp"/>
+</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/layout/breadcrumb_scroll_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/breadcrumb_scroll_view.xml	(revision )
+++ app/src/main/res/layout/breadcrumb_scroll_view.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.rokpetek.breadcrumbtoolbar.BreadcrumbScrollView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/breadcrumb_scroll_view"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content">
+    <LinearLayout
+        android:id="@+id/breadcrumb_scroll_view_inner_layout"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+        <!-- Items added dynamically -->
+    </LinearLayout>
+</com.rokpetek.breadcrumbtoolbar.BreadcrumbScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/drawer_header_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/drawer_header_main.xml	(revision )
+++ app/src/main/res/layout/drawer_header_main.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:layout_width="match_parent"
+              android:layout_height="16dp"
+              android:background="@color/colorPrimary"
+              android:gravity="bottom"
+              android:orientation="vertical"
+              android:paddingBottom="@dimen/activity_vertical_margin"
+              android:paddingLeft="@dimen/activity_horizontal_margin"
+              android:paddingRight="@dimen/activity_horizontal_margin"
+              android:paddingTop="@dimen/activity_vertical_margin"
+              android:theme="@style/ThemeOverlay.AppCompat.Dark">
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:paddingTop="16dp"/>
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="16dp"
+        android:text="@string/app_name"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"/>
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="test@testmail.com"/>
+</LinearLayout>
Index: app/src/main/res/layout/breadcrumb_toolbar_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/breadcrumb_toolbar_item.xml	(revision )
+++ app/src/main/res/layout/breadcrumb_toolbar_item.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/breadcrumb_item_layout"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content">
+    <ImageView
+        android:id="@+id/breadcrumb_item_icon"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
+        android:gravity="bottom"
+        android:paddingLeft="8dp"
+        android:paddingRight="8dp"
+        android:src="@drawable/ic_chevron_right_white_24dp"
+        android:tint="@android:color/white">
+    </ImageView>
+    <Button
+        android:id="@+id/breadcrumb_item_button"
+        style="@style/Text.Breadcrumb.Toolbar">
+    </Button>
+</LinearLayout>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(date 1495875516000)
+++ build.gradle	(revision )
@@ -5,7 +5,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.0'
+        classpath 'com.android.tools.build:gradle:2.3.3'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -21,3 +21,4 @@
 task clean(type: Delete) {
     delete rootProject.buildDir
 }
+
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(date 1495875516000)
+++ app/build.gradle	(revision )
@@ -5,24 +5,36 @@
     buildToolsVersion "25.0.0"
 
     defaultConfig {
+
+        jackOptions { enabled true }
+
         applicationId "de.kl.fh.moviestar"
         minSdkVersion 21
         targetSdkVersion 25
         versionCode 1
         versionName "1.0"
     }
+
     buildTypes {
         release {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
-}
+    }
+}
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
+
     testCompile 'junit:junit:4.12'
     compile 'com.android.support:appcompat-v7:25.0.0'
+    compile 'com.android.support:support-core-utils:25.0.0'
+    compile 'com.android.support:design:25.0.0'
 }
 
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(date 1495875516000)
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+<manifest
+    xmlns:android="http://schemas.android.com/apk/res/android"
     package="de.kl.fh.moviestar">
 
     <application
@@ -12,7 +13,6 @@
         <activity android:name=".HomeScreen">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(date 1495875516000)
+++ settings.gradle	(revision )
@@ -1,1 +1,1 @@
-include ':app'
+include ':app', ':breadcrumbtoolbar'
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(date 1495875516000)
+++ app/src/main/res/values/strings.xml	(revision )
@@ -10,4 +10,18 @@
     <string name="year">Year</string>
     <string name="search">Search</string>
     <string name="myLists">My Lists</string>
+
+    <string name="new_crumb_created">New crumb created</string>
+    <string name="breadcrumb_name">Crumb %1$s</string>
+    <string name="help_content">This library was created for the love of breadcrumbs. Bring some milk and show some support!\n\nMail me: rok5ek@hotmail.com</string>
+    <string name="undo">Undo</string>
+
+    <string name="action_home">Home</string>
+    <string name="action_new_crumb">New crumb</string>
+    <string name="action_help">Help</string>
+    <string name="section_settings">Settings</string>
+    <string name="navigation_drawer_open">Open navigation drawer</string>
+    <string name="navigation_drawer_close">Close navigation drawer</string>
+    <!-- Settings -->
+    <string name="action_settings">Settings</string>
 </resources>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(date 1495875516000)
+++ app/src/main/res/values/styles.xml	(revision )
@@ -1,11 +1,32 @@
 <resources>
 
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
         <!-- Customize your theme here. -->
         <item name="colorPrimary">@color/colorPrimary</item>
         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
         <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/>
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light"/>
+
+    <!-- Breadcrumb text view style -->
+    <style name="Text.Breadcrumb.Toolbar" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_gravity">center</item>
+        <item name="android:gravity">center</item>
+        <item name="android:textColor">@android:color/white</item>
+        <item name="android:background">?android:attr/selectableItemBackground</item>
+        <item name="android:layout_margin">0dp</item>
+        <item name="android:minHeight">0dp</item>
+        <item name="android:minWidth">0dp</item>
+        <item name="android:padding">0dp</item>
     </style>
 
 </resources>
Index: app/src/main/res/layout/activity_home_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_home_screen.xml	(date 1495875516000)
+++ app/src/main/res/layout/activity_home_screen.xml	(revision )
@@ -1,4 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:openDrawer="start">
+
+    <include
+        layout="@layout/content_breadcrumb"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/navigation_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/drawer_header_main"
+        app:menu="@layout/menu_drawer"/>
+
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
@@ -33,4 +58,15 @@
         style="?android:attr/borderlessButtonStyle"
         android:layout_below="@+id/movies"
         android:layout_alignParentStart="true" />
+
+    <de.kl.fh.moviestar.BreadcrumbToolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        app:popupTheme="@style/AppTheme.PopupOverlay"
+        />
+
 </RelativeLayout>
+
+</android.support.v4.widget.DrawerLayout>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(date 1495875516000)
+++ .idea/gradle.xml	(revision )
@@ -10,14 +10,10 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/breadcrumbtoolbar" />
           </set>
         </option>
-        <option name="myModules">
-          <set>
-            <option value="$PROJECT_DIR$" />
-            <option value="$PROJECT_DIR$/app" />
-          </set>
-        </option>
+        <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
   </component>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1495875516000)
+++ .idea/modules.xml	(revision )
@@ -4,6 +4,8 @@
     <modules>
       <module fileurl="file://$PROJECT_DIR$/EAE.iml" filepath="$PROJECT_DIR$/EAE.iml" />
       <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/breadcrumbtoolbar/breadcrumbtoolbar.iml" filepath="$PROJECT_DIR$/breadcrumbtoolbar/breadcrumbtoolbar.iml" />
+      <module fileurl="file://$PROJECT_DIR$/breadcrumbtoolbar/breadcrumbtoolbar.iml" filepath="$PROJECT_DIR$/breadcrumbtoolbar/breadcrumbtoolbar.iml" />
       <module fileurl="file://$PROJECT_DIR$/moviestar.iml" filepath="$PROJECT_DIR$/moviestar.iml" />
     </modules>
   </component>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(date 1495875516000)
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -1,6 +1,6 @@
-#Mon Dec 28 10:00:20 PST 2015
+#Fri May 19 18:29:28 CEST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1495875516000)
+++ .idea/misc.xml	(revision )
@@ -56,7 +56,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
